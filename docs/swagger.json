{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Contacts app",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "This is a documentation of contacts app"
  },
  "tags": [
    {
      "name": "Contacts",
      "description": "Operations about users."
    },
    {
      "name": "Auth",
      "description": "Auth operations."
    }
  ],
  "servers": [
    {
      "url": "http://localhost:3000"
    },
    {
      "url": "https://example.com/api/v1"
    }
  ],
  "paths": {
    "/contacts": {
      "get": {
        "tags": ["Contacts"],
        "summary": "Get contacts",
        "operationId": "getContacts",
        "description": "Get a list of contacts",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "example": 1
            },
            "description": "Current page number"
          },
          {
            "in": "query",
            "name": "perPage",
            "schema": {
              "type": "integer",
              "example": 10
            },
            "description": "Number of items per page"
          },
          {
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string",
              "example": "Alex Boo"
            },
            "description": "Contact's name"
          },
          {
            "in": "query",
            "name": "phoneNumber",
            "schema": {
              "type": "string",
              "example": "+380960000000"
            },
            "description": "Contact's phone number"
          },
          {
            "in": "query",
            "name": "email",
            "schema": {
              "type": "string",
              "format": "email",
              "example": "alex@gmail.com"
            },
            "description": "Contact's email"
          },
          {
            "in": "query",
            "name": "isFavourite",
            "schema": {
              "type": "boolean",
              "example": true
            },
            "description": "Is this contact a favorite?"
          },
          {
            "in": "query",
            "name": "contactType",
            "schema": {
              "type": "string",
              "enum": ["personal", "work"],
              "example": "work"
            },
            "description": "Type of contact"
          },
          {
            "in": "query",
            "name": "userId",
            "schema": {
              "type": "string",
              "example": "65e4decdd286b30065d54af9"
            },
            "description": "User's id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully get list of all contacts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Contact"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "description": "Contacts not found"
          }
        }
      },
      "post": {
        "tags": ["Contacts"],
        "summary": "Create a contact",
        "operationId": "createContact",
        "description": "Create a new contact",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Contact"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Contact created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/contacts/{contactId}": {
      "get": {
        "tags": ["Contacts"],
        "summary": "Get contact by ID",
        "operationId": "getContactById",
        "description": "Find a contact by its ID",
        "parameters": [
          {
            "in": "path",
            "name": "contactId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65ca67e7ae7f10c88b598384"
            },
            "description": "ID of the contact to retrieve"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully found contact",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "description": "Contact not found"
          }
        }
      },
      "patch": {
        "tags": ["Contacts"],
        "summary": "Update a contact",
        "operationId": "updateContact",
        "description": "Update a contact by its ID",
        "parameters": [
          {
            "in": "path",
            "name": "contactId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65ca67e7ae7f10c88b598384"
            },
            "description": "ID of the contact to update"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Contact"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Contact updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "description": "Contact not found"
          }
        }
      },
      "delete": {
        "tags": ["Contacts"],
        "summary": "Delete a contact",
        "operationId": "deleteContact",
        "description": "Delete a contact by its ID",
        "parameters": [
          {
            "in": "path",
            "name": "contactId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65ca67e7ae7f10c88b598384"
            },
            "description": "ID of the contact to delete"
          }
        ],
        "responses": {
          "204": {
            "description": "Contact deleted successfully"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "description": "Contact not found"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "Contact": {
        "type": "object",
        "required": [
          "name",
          "phoneNumber",
          "email",
          "isFavourite",
          "contactType",
          "userId"
        ],
        "properties": {
          "name": {
            "description": "Contact's name",
            "type": "string",
            "example": "Alex Boo"
          },
          "phoneNumber": {
            "description": "Contact's phone number",
            "type": "string",
            "example": "+380960000000"
          },
          "email": {
            "description": "Contact's email",
            "type": "string",
            "format": "email",
            "example": "alex@gmail.com"
          },
          "isFavourite": {
            "description": "Is this contact a favorite?",
            "type": "boolean",
            "example": true
          },
          "contactType": {
            "description": "Type of contact",
            "type": "string",
            "enum": ["personal", "work"],
            "example": "work"
          },
          "userId": {
            "description": "User's id",
            "type": "string",
            "example": "65e4decdd286b30065d54af9"
          },
          "photo": {
            "description": "Link to contact's photo",
            "type": "string",
            "format": "uri",
            "example": "https://res.cloudinary.com/uqwgdu/image/upload/image.png"
          }
        }
      }
    },
    "responses": {
      "401": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "Unauthorized"
                }
              }
            }
          }
        }
      }
    }
  }
}
